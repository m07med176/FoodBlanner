Index: app/src/main/res/menu/option_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/option_menu.xml b/app/src/main/res/menu/option_menu.xml
new file mode 100644
--- /dev/null	(date 1674319573384)
+++ b/app/src/main/res/menu/option_menu.xml	(date 1674319573384)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item android:id="@+id/settings_option" android:title="@string/settings_option" />
+    <item android:id="@+id/signout_option" android:title="@string/signout_option" />
+</menu>
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	
+++ b/app/src/main/res/values/strings.xml	(date 1674319573377)
@@ -62,5 +62,7 @@
     <string name="emptyfav">What\'s my favourite food? Once you order out..\n -ABIGAIL BRESLIN. </string>
     <string name="autocomplete_result_show">Data result</string>
     <string name="guest">Guest</string>
+    <string name="signout_option">Signout</string>
+    <string name="settings_option">Settings</string>
 
 </resources>
\ No newline at end of file
Index: app/src/main/java/iti/android/foodplanner/ui/features/home/HomePresenter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/ui/features/home/HomePresenter.java b/app/src/main/java/iti/android/foodplanner/ui/features/home/HomePresenter.java
--- a/app/src/main/java/iti/android/foodplanner/ui/features/home/HomePresenter.java	
+++ b/app/src/main/java/iti/android/foodplanner/ui/features/home/HomePresenter.java	(date 1674319573374)
@@ -14,7 +14,7 @@
 
     public HomePresenter(Context context, HomeInterface homeInterface) {
         this.homeInterface = homeInterface;
-        repository = new Repository(context);
+        repository = Repository.getInstance(context);
     }
 
     public void getRandomMeals(DataFetch<List<MealsItem>> dataFetch){
Index: app/src/main/java/iti/android/foodplanner/ui/features/favorite/FavoritePresenter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/ui/features/favorite/FavoritePresenter.java b/app/src/main/java/iti/android/foodplanner/ui/features/favorite/FavoritePresenter.java
--- a/app/src/main/java/iti/android/foodplanner/ui/features/favorite/FavoritePresenter.java	
+++ b/app/src/main/java/iti/android/foodplanner/ui/features/favorite/FavoritePresenter.java	(date 1674319573372)
@@ -18,7 +18,7 @@
 
     Repository repository;
     public FavoritePresenter(Context context, FavoriteInterface favoriteInterface) {
-        repository  =new Repository(context);
+        repository  =Repository.getInstance(context);
         this.favoriteInterface = favoriteInterface;
     }
 
Index: app/src/main/java/iti/android/foodplanner/ui/features/sign_in_with_google/SignUpOrLoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/ui/features/sign_in_with_google/SignUpOrLoginActivity.java b/app/src/main/java/iti/android/foodplanner/ui/features/sign_in_with_google/SignUpOrLoginActivity.java
--- a/app/src/main/java/iti/android/foodplanner/ui/features/sign_in_with_google/SignUpOrLoginActivity.java	
+++ b/app/src/main/java/iti/android/foodplanner/ui/features/sign_in_with_google/SignUpOrLoginActivity.java	(date 1674319573366)
@@ -6,19 +6,15 @@
 
 import android.content.Intent;
 import android.os.Bundle;
-import android.view.View;
 import android.widget.Button;
 import android.widget.TextView;
 import android.widget.Toast;
 
-import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
 import com.google.android.gms.common.SignInButton;
 
 
 import iti.android.foodplanner.MainActivity;
 import iti.android.foodplanner.R;
-import iti.android.foodplanner.data.authentication.Authentication;
-import iti.android.foodplanner.data.authentication.AuthenticationFactory;
 import iti.android.foodplanner.data.authentication.GoogleAuth;
 import iti.android.foodplanner.ui.features.login.LoginActivity;
 import iti.android.foodplanner.ui.features.register.RegisterActivity;
@@ -32,71 +28,62 @@
     TextView loginTxtViewBtn;
     Button guestButton;
 
-    GoogleAuth.Google google;
-
-    SignInWithGooglePresenter signInWithGooglePresenter;
 
-
+    SignInWithGooglePresenter presenter;
 
     @Override
     protected void onStart() {
         super.onStart();
-
-        if(google.getCurrentUser()!=null){
-            reload();
-        }
+        if(presenter.isUser())
+            gotoApp();
     }
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_sign_up_or_login);
+        presenter =new SignInWithGooglePresenter(this,this);
+
         getSupportActionBar().hide();
         initUi();
-
-        signInWithGooglePresenter=new SignInWithGooglePresenter(this);
+        presenter.googleAuthInitialize(this);
 
-        GoogleAuth authentication=(GoogleAuth)AuthenticationFactory.authenticationManager(AuthenticationFactory.GOOGLE);
-        google = authentication.instance();
-        google.googleIntializer(SignUpOrLoginActivity.this,SignUpOrLoginActivity.this,this);
+        buttonsEvents();
 
-        loginWithGoogleButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                startActivityForResult(google.loginWithGoogle(), RC_SIGN_IN);
-            }
-        });
+    }
+
+    private void buttonsEvents() {
+        loginWithGoogleButton.setOnClickListener(view -> startActivityForResult(presenter.loginWithGoogle(), RC_SIGN_IN));
 
         signUpButton.setOnClickListener(view -> startActivity(new Intent(getApplicationContext(), RegisterActivity.class)));
 
         loginTxtViewBtn.setOnClickListener(view -> startActivity(new Intent(getApplicationContext(), LoginActivity.class)));
 
         guestButton.setOnClickListener(v -> startActivity(new Intent(getApplicationContext(), MainActivity.class)));
+
     }
 
 
     @Override
     public void onActivityResult(int requestCode, int resultCode, Intent data) {
         super.onActivityResult(requestCode, resultCode, data);
-       google.checkRequestCode(requestCode,data);
+       presenter.checkRequestCode(requestCode,data);
     }
 
-    public void updateUI(GoogleSignInAccount user) {
-        if(user!=null){
 
-            startActivity(new Intent(getApplicationContext(), MainActivity.class));}
-    }
 
-    public void reload() {
 
-            startActivity(new Intent(getApplicationContext(), MainActivity.class));
+
+    public void initUi(){
+        loginWithGoogleButton=findViewById(R.id.signInWithGoogle);
+        signUpButton=findViewById(R.id.signUpWithMailBtn);
+        loginTxtViewBtn=findViewById(R.id.loginTxtView);
+        guestButton=findViewById(R.id.guestButton);
     }
 
     @Override
     public void onSuccessFullFireBaseAuth() {
-        startActivity(new Intent(SignUpOrLoginActivity.this, MainActivity.class));
-        finish();
-
+        gotoApp();
     }
 
     @Override
@@ -106,21 +93,8 @@
 
     }
 
-    @Override
-    public void onSuccessFullSignIn( GoogleSignInAccount account) {
-        updateUI(account);
-
-    }
-
-    @Override
-    public void onFailedSignIn( GoogleSignInAccount account) {
-        updateUI((GoogleSignInAccount) null);
-    }
-    public void initUi(){
-        loginWithGoogleButton=findViewById(R.id.signInWithGoogle);
-        signUpButton=findViewById(R.id.signUpWithMailBtn);
-        loginTxtViewBtn=findViewById(R.id.loginTxtView);
-        guestButton=findViewById(R.id.guestButton);
-
+    public void gotoApp() {
+        startActivity(new Intent(SignUpOrLoginActivity.this, MainActivity.class));
+        finish();
     }
 }
\ No newline at end of file
Index: app/src/main/java/iti/android/foodplanner/ui/features/sign_in_with_google/SignInWithGoogleInterface.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/ui/features/sign_in_with_google/SignInWithGoogleInterface.java b/app/src/main/java/iti/android/foodplanner/ui/features/sign_in_with_google/SignInWithGoogleInterface.java
--- a/app/src/main/java/iti/android/foodplanner/ui/features/sign_in_with_google/SignInWithGoogleInterface.java	
+++ b/app/src/main/java/iti/android/foodplanner/ui/features/sign_in_with_google/SignInWithGoogleInterface.java	(date 1674319573363)
@@ -6,7 +6,4 @@
 public interface SignInWithGoogleInterface {
     public void onSuccessFullFireBaseAuth();
     public void onFailedFireBaseAuth();
-
-    public void onSuccessFullSignIn( GoogleSignInAccount account);
-    public void onFailedSignIn( GoogleSignInAccount account);
 }
Index: app/src/main/java/iti/android/foodplanner/ui/features/sign_in_with_google/SignInWithGooglePresenter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/ui/features/sign_in_with_google/SignInWithGooglePresenter.java b/app/src/main/java/iti/android/foodplanner/ui/features/sign_in_with_google/SignInWithGooglePresenter.java
--- a/app/src/main/java/iti/android/foodplanner/ui/features/sign_in_with_google/SignInWithGooglePresenter.java	
+++ b/app/src/main/java/iti/android/foodplanner/ui/features/sign_in_with_google/SignInWithGooglePresenter.java	(date 1674319573118)
@@ -1,15 +1,28 @@
 package iti.android.foodplanner.ui.features.sign_in_with_google;
 
-import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
+import android.content.Context;
+import android.content.Intent;
+
+import iti.android.foodplanner.data.Repository;
+import iti.android.foodplanner.data.authentication.AuthenticationFactory;
+import iti.android.foodplanner.data.authentication.GoogleAuth;
 
 public class SignInWithGooglePresenter {
+    private GoogleAuth.Google google;
+    private Repository repository;
     private SignInWithGoogleInterface signInWithGoogleInterface;
 
 
-    public SignInWithGooglePresenter(SignInWithGoogleInterface signInWithGoogleInterface) {
+    public SignInWithGooglePresenter(Context context,SignInWithGoogleInterface signInWithGoogleInterface) {
+        repository = Repository.getInstance(context);
         this.signInWithGoogleInterface = signInWithGoogleInterface;
+        GoogleAuth authentication=(GoogleAuth) AuthenticationFactory.authenticationManager(AuthenticationFactory.GOOGLE);
+        google = authentication.instance();
     }
 
+    public void googleAuthInitialize(SignUpOrLoginActivity activity){
+        google.googleIntializer(activity,activity,signInWithGoogleInterface);
+    }
     public void onSuccessFullFireBaseAuth(){
         signInWithGoogleInterface.onSuccessFullFireBaseAuth();
     }
@@ -18,12 +31,16 @@
         signInWithGoogleInterface.onFailedFireBaseAuth();
     }
 
-    public void onSuccessFullSignIn( GoogleSignInAccount account){
-        signInWithGoogleInterface.onSuccessFullSignIn(account);
+
+    public Intent loginWithGoogle() {
+        return google.loginWithGoogle();
     }
 
-    public void onFailedSignIn( GoogleSignInAccount account){
-        signInWithGoogleInterface.onFailedSignIn(account);
+    public boolean isUser() {
+        return repository.isUser();
     }
 
+    public void checkRequestCode(int requestCode, Intent data) {
+        google.checkRequestCode(requestCode,data);
+    }
 }
Index: app/src/main/java/iti/android/foodplanner/data/room/RoomDatabase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/data/room/RoomDatabase.java b/app/src/main/java/iti/android/foodplanner/data/room/RoomDatabase.java
--- a/app/src/main/java/iti/android/foodplanner/data/room/RoomDatabase.java	
+++ b/app/src/main/java/iti/android/foodplanner/data/room/RoomDatabase.java	(date 1674319573115)
@@ -5,7 +5,6 @@
 import androidx.room.Database;
 import androidx.room.Room;
 
-import iti.android.foodplanner.data.models.categoryFeed.CategoriesItem;
 import iti.android.foodplanner.data.models.meal.MealPlan;
 import iti.android.foodplanner.data.models.meal.MealsItem;
 
Index: app/src/main/java/iti/android/foodplanner/data/backup/BackupManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/data/backup/BackupManager.java b/app/src/main/java/iti/android/foodplanner/data/backup/BackupManager.java
--- a/app/src/main/java/iti/android/foodplanner/data/backup/BackupManager.java	
+++ b/app/src/main/java/iti/android/foodplanner/data/backup/BackupManager.java	(date 1674319573110)
@@ -1,44 +1,85 @@
 package iti.android.foodplanner.data.backup;
 
+import android.content.Context;
 import android.view.View;
 
 import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.Task;
 import com.google.android.material.snackbar.Snackbar;
 import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.firestore.CollectionReference;
 import com.google.firebase.firestore.DocumentReference;
+import com.google.firebase.firestore.DocumentSnapshot;
+import com.google.firebase.firestore.EventListener;
+import com.google.firebase.firestore.FieldValue;
 import com.google.firebase.firestore.FirebaseFirestore;
+import com.google.firebase.firestore.FirebaseFirestoreException;
 import com.google.firebase.firestore.FirebaseFirestoreSettings;
+import com.google.firebase.firestore.QueryDocumentSnapshot;
+import com.google.firebase.firestore.QuerySnapshot;
 
+import java.util.HashMap;
+import java.util.Map;
+
+import iti.android.foodplanner.data.models.BackupHolder;
 import iti.android.foodplanner.data.models.User;
+import iti.android.foodplanner.data.models.meal.MealsItem;
+import iti.android.foodplanner.data.shared.SharedManager;
 
 public class BackupManager  {
     public static final String ROOT_KEY = "USERS";
+    public static final String FAV_KEY = "FAV";
+    private SharedManager sharedManager;
     FirebaseFirestore firebaseFirestore;
-    private BackupManager(){
+    private BackupManager(SharedManager sharedManager){
         firebaseFirestore = FirebaseFirestore.getInstance();
         FirebaseFirestoreSettings settings =
                 new FirebaseFirestoreSettings.Builder()
                         .build();
         firebaseFirestore.setFirestoreSettings(settings);
+        this.sharedManager =  sharedManager;
     }
 
     public static BackupManager backupManager = null;
 
-    public static BackupManager getInstance(){
+    public static BackupManager getInstance(SharedManager sharedManager){
         if (backupManager==null)
-            backupManager = new BackupManager();
+            backupManager = new BackupManager(sharedManager);
 
         return backupManager;
     }
 
-    public void saveUser(User user,OnCompleteListener<Void> onCompleteListener){
+    public void saveUser(User user, OnCompleteListener<Void> onCompleteListener){
         firebaseFirestore
                 .collection(ROOT_KEY)
                 .document(user.getUID())
                 .set(user)
                 .addOnCompleteListener(onCompleteListener);
     }
+    public void deleteFavorite(MealsItem mealsItem){
+        firebaseFirestore
+                .collection(ROOT_KEY)
+                .document(sharedManager.getUser().getUID())
+                .collection(FAV_KEY).document(mealsItem.getIdMeal()).delete();
+
+    }
+    public void saveFavorite(MealsItem mealsItem){
+        firebaseFirestore
+                .collection(ROOT_KEY)
+                .document(sharedManager.getUser().getUID())
+                .collection(FAV_KEY)
+                .document(mealsItem.getIdMeal())
+                .set(mealsItem);
+    }
+
+    public void restoreData(EventListener<DocumentSnapshot> onCompleteListener){
+
+        firebaseFirestore
+                .collection(ROOT_KEY)
+                .document(sharedManager.getUser().getUID())
+                .addSnapshotListener(onCompleteListener);
+    }
 }
Index: app/src/main/java/iti/android/foodplanner/data/models/meal/MealsItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/data/models/meal/MealsItem.java b/app/src/main/java/iti/android/foodplanner/data/models/meal/MealsItem.java
--- a/app/src/main/java/iti/android/foodplanner/data/models/meal/MealsItem.java	
+++ b/app/src/main/java/iti/android/foodplanner/data/models/meal/MealsItem.java	(date 1674319573032)
@@ -49,68 +49,68 @@
 
 	@ColumnInfo
 	@SerializedName("strIngredient10")
-	private String strIngredient10;
+	private String strIngredient10 = "";
 	@ColumnInfo
 	@SerializedName("strIngredient12")
-	private String strIngredient12;
+	private String strIngredient12= "";
 	@ColumnInfo
 	@SerializedName("strIngredient11")
-	private String strIngredient11;
+	private String strIngredient11= "";
 	@ColumnInfo
 	@SerializedName("strIngredient14")
-	private String strIngredient14;
+	private String strIngredient14= "";
 
 	@ColumnInfo
 	@SerializedName("strIngredient13")
-	private String strIngredient13;
+	private String strIngredient13= "";
 
 	@ColumnInfo
 	@SerializedName("strIngredient16")
-	private String strIngredient16;
+	private String strIngredient16= "";
 	@ColumnInfo
 	@SerializedName("strIngredient15")
-	private String strIngredient15;
+	private String strIngredient15= "";
 	@ColumnInfo
 	@SerializedName("strIngredient18")
-	private String strIngredient18;
+	private String strIngredient18= "";
 	@ColumnInfo
 	@SerializedName("strIngredient17")
-	private String strIngredient17;
+	private String strIngredient17= "";
 
 	@ColumnInfo
 	@SerializedName("strIngredient19")
-	private String strIngredient19;
+	private String strIngredient19= "";
 
 	@ColumnInfo
 	@SerializedName("strIngredient1")
-	private String strIngredient1;
+	private String strIngredient1= "";
 	@ColumnInfo
 	@SerializedName("strIngredient3")
-	private String strIngredient3;
+	private String strIngredient3= "";
 	@ColumnInfo
 	@SerializedName("strIngredient2")
-	private String strIngredient2;
+	private String strIngredient2= "";
 	@ColumnInfo
 	@SerializedName("strIngredient20")
-	private String strIngredient20;
+	private String strIngredient20= "";
 	@ColumnInfo
 	@SerializedName("strIngredient5")
-	private String strIngredient5;
+	private String strIngredient5= "";
 	@ColumnInfo
 	@SerializedName("strIngredient4")
-	private String strIngredient4;
+	private String strIngredient4= "";
 	@ColumnInfo
 	@SerializedName("strIngredient7")
-	private String strIngredient7;
+	private String strIngredient7= "";
 	@ColumnInfo
 	@SerializedName("strIngredient6")
-	private String strIngredient6;
+	private String strIngredient6= "";
 	@ColumnInfo
 	@SerializedName("strIngredient9")
-	private String strIngredient9;
+	private String strIngredient9= "";
 	@ColumnInfo
 	@SerializedName("strIngredient8")
-	private String strIngredient8;
+	private String strIngredient8= "";
 	// endregion
 
 
Index: app/src/main/java/iti/android/foodplanner/data/models/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/data/models/User.java b/app/src/main/java/iti/android/foodplanner/data/models/User.java
--- a/app/src/main/java/iti/android/foodplanner/data/models/User.java	
+++ b/app/src/main/java/iti/android/foodplanner/data/models/User.java	(date 1674319572984)
@@ -9,14 +9,25 @@
     private String imageUrl;
     private String email;
 
+    private int authProvider;
+
     public User() {
     }
 
-    public User(String UID, String name, String imageUrl, String email) {
+    public User(String UID, String name, String imageUrl, String email,int authProvider) {
         this.UID = UID;
         this.name = name;
         this.imageUrl = imageUrl;
         this.email = email;
+        this.authProvider = authProvider;
+    }
+
+    public int getAuthProvider() {
+        return authProvider;
+    }
+
+    public void setAuthProvider(int authProvider) {
+        this.authProvider = authProvider;
     }
 
     public String getUID() {
Index: app/src/main/java/iti/android/foodplanner/data/models/selections/area/Area.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/data/models/selections/area/Area.java b/app/src/main/java/iti/android/foodplanner/data/models/selections/area/Area.java
new file mode 100644
--- /dev/null	(date 1674319572977)
+++ b/app/src/main/java/iti/android/foodplanner/data/models/selections/area/Area.java	(date 1674319572977)
@@ -0,0 +1,67 @@
+package iti.android.foodplanner.data.models.selections.area;
+
+import java.util.HashMap;
+
+public class Area {
+    private String strArea;
+    private String thumbnail;
+
+    public Area() {
+    }
+
+    public Area(String strArea) {
+        this.strArea = strArea;
+        this.thumbnail = getThumbnail();
+    }
+
+    public String getThumbnail() {
+        setThumbnail();
+        return thumbnail;
+    }
+
+    public void setThumbnail() {
+        HashMap<String,String> countryCode = new HashMap<>();
+        countryCode.put("Vietnamese","vi");
+        countryCode.put("Turkish","vi");
+        countryCode.put("Tunisian","vi");
+        countryCode.put("Thai","th");
+        countryCode.put("Spanish","sp");
+        countryCode.put("Russian","ru");
+        countryCode.put("American","us");
+        countryCode.put("British","uk");
+        countryCode.put("Canadian","ca");
+        countryCode.put("Chinese","ch");
+        countryCode.put("Croatian","cr");
+        countryCode.put("Dutch","du");
+        countryCode.put("Egyptian","eg");
+        countryCode.put("French","fr");
+        countryCode.put("Greek","gr");
+        countryCode.put("Indian","in");
+        countryCode.put("Irish","ir");
+        countryCode.put("Italian","it");
+        countryCode.put("Jamaican","code");
+        countryCode.put("Japanese","ja");
+        countryCode.put("Kenyan","ke");
+        countryCode.put("Malaysian","ma");
+        countryCode.put("Mexican","me");
+        countryCode.put("Moroccan","ma");
+        countryCode.put("Polish","po");
+        countryCode.put("Portuguese","pr");
+        this.thumbnail = "https://www.themealdb.com/images/icons/flags/big/64/"+countryCode.get(strArea)+".png";
+    }
+
+    public String getStrArea() {
+        return strArea;
+    }
+
+    public void setStrArea(String strArea) {
+        this.strArea = strArea;
+    }
+
+    @Override
+    public String toString() {
+        return "Area{" +
+                "strArea='" + strArea + '\'' +
+                '}';
+    }
+}
Index: app/src/main/java/iti/android/foodplanner/data/models/selections/area/AreasList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/data/models/selections/area/AreasList.java b/app/src/main/java/iti/android/foodplanner/data/models/selections/area/AreasList.java
new file mode 100644
--- /dev/null	(date 1674319572972)
+++ b/app/src/main/java/iti/android/foodplanner/data/models/selections/area/AreasList.java	(date 1674319572972)
@@ -0,0 +1,27 @@
+package iti.android.foodplanner.data.models.selections.area;
+
+import com.google.gson.annotations.SerializedName;
+
+import java.util.List;
+
+public class AreasList {
+
+	@SerializedName("meals")
+	private List<Area> areas;
+
+	public void setAreas(List<Area> areas){
+		this.areas = areas;
+	}
+
+	public List<Area> getAreas(){
+		return areas;
+	}
+
+	@Override
+ 	public String toString(){
+		return 
+			"Areas{" +
+			"Area = '" + areas + '\'' +
+			"}";
+		}
+}
\ No newline at end of file
Index: app/src/main/java/iti/android/foodplanner/data/models/selections/category/Category.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/data/models/selections/category/Category.java b/app/src/main/java/iti/android/foodplanner/data/models/selections/category/Category.java
new file mode 100644
--- /dev/null	(date 1674319572963)
+++ b/app/src/main/java/iti/android/foodplanner/data/models/selections/category/Category.java	(date 1674319572963)
@@ -0,0 +1,32 @@
+package iti.android.foodplanner.data.models.selections.category;
+
+public class Category {
+    private String strCategory;
+    private String thumbail;
+
+    public Category() {
+    }
+
+    public Category(String strCategory) {
+        this.strCategory = strCategory;
+        this.thumbail = thumbail = "https://www.themealdb.com/images/category/"+strCategory+".png";
+    }
+
+
+    public String getThumbail() {
+        return thumbail;
+    }
+
+    public void setThumbail(String thumbail) {
+        this.thumbail = "https://www.themealdb.com/images/category/"+strCategory+".png";
+    }
+
+    public String getStrCategory() {
+        return strCategory;
+    }
+
+    public void setStrCategory(String strCategory) {
+        this.strCategory = strCategory;
+    }
+
+}
Index: app/src/main/java/iti/android/foodplanner/data/models/selections/category/CategoriesList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/data/models/selections/category/CategoriesList.java b/app/src/main/java/iti/android/foodplanner/data/models/selections/category/CategoriesList.java
new file mode 100644
--- /dev/null	(date 1674319572955)
+++ b/app/src/main/java/iti/android/foodplanner/data/models/selections/category/CategoriesList.java	(date 1674319572955)
@@ -0,0 +1,27 @@
+package iti.android.foodplanner.data.models.selections.category;
+
+import com.google.gson.annotations.SerializedName;
+
+import java.util.List;
+
+public class CategoriesList {
+
+	@SerializedName("meals")
+	private List<Category> categories;
+
+	public void setCategory(List<Category> categories){
+		this.categories = categories;
+	}
+
+	public List<Category> getCategory(){
+		return categories;
+	}
+
+	@Override
+ 	public String toString(){
+		return 
+			"Categories{" +
+			"Category = '" + categories + '\'' +
+			"}";
+		}
+}
\ No newline at end of file
Index: app/src/main/java/iti/android/foodplanner/data/models/selections/Ingredient/Ingredient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/data/models/selections/Ingredient/Ingredient.java b/app/src/main/java/iti/android/foodplanner/data/models/selections/Ingredient/Ingredient.java
new file mode 100644
--- /dev/null	(date 1674319572946)
+++ b/app/src/main/java/iti/android/foodplanner/data/models/selections/Ingredient/Ingredient.java	(date 1674319572946)
@@ -0,0 +1,60 @@
+package iti.android.foodplanner.data.models.selections.Ingredient;
+
+import com.google.gson.annotations.SerializedName;
+
+public class Ingredient{
+
+	@SerializedName("strDescription")
+	private String strDescription;
+
+	private String thumnail;
+	@SerializedName("strIngredient")
+	private String strIngredient;
+
+	@SerializedName("strType")
+	private Object strType;
+
+	@SerializedName("idIngredient")
+	private String idIngredient;
+
+	public void setStrDescription(String strDescription){
+		this.strDescription = strDescription;
+	}
+
+	public String getStrDescription(){
+		return strDescription;
+	}
+
+	public void setStrIngredient(String strIngredient){
+		this.strIngredient = strIngredient;
+	}
+
+	public String getStrIngredient(){
+		return strIngredient;
+	}
+
+	public void setStrType(Object strType){
+		this.strType = strType;
+	}
+
+	public Object getStrType(){
+		return strType;
+	}
+
+	public void setIdIngredient(String idIngredient){
+		this.idIngredient = idIngredient;
+	}
+
+	public String getIdIngredient(){
+		return idIngredient;
+	}
+
+	public String getThumnail() {
+		return thumnail;
+	}
+
+	public void setThumnail() {
+		this.thumnail = "https://www.themealdb.com/images/ingredients/"+strIngredient+".png";
+	}
+
+}
\ No newline at end of file
Index: app/src/main/java/iti/android/foodplanner/data/models/selections/Ingredient/IngredientsList.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/data/models/selections/Ingredient/IngredientsList.java b/app/src/main/java/iti/android/foodplanner/data/models/selections/Ingredient/IngredientsList.java
new file mode 100644
--- /dev/null	(date 1674319572940)
+++ b/app/src/main/java/iti/android/foodplanner/data/models/selections/Ingredient/IngredientsList.java	(date 1674319572940)
@@ -0,0 +1,27 @@
+package iti.android.foodplanner.data.models.selections.Ingredient;
+
+import com.google.gson.annotations.SerializedName;
+
+import java.util.List;
+
+public class IngredientsList {
+
+	@SerializedName("meals")
+	private List<Ingredient> meals;
+
+	public void setMeals(List<Ingredient> meals){
+		this.meals = meals;
+	}
+
+	public List<Ingredient> getMeals(){
+		return meals;
+	}
+
+	@Override
+ 	public String toString(){
+		return 
+			"Ingredients{" +
+			"Ingredient = '" + meals + '\'' +
+			"}";
+		}
+}
\ No newline at end of file
Index: app/src/main/java/iti/android/foodplanner/data/models/selections/categoryFeed/CategoriesFeed.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/data/models/selections/categoryFeed/CategoriesFeed.java b/app/src/main/java/iti/android/foodplanner/data/models/selections/categoryFeed/CategoriesFeed.java
new file mode 100644
--- /dev/null	(date 1674319572931)
+++ b/app/src/main/java/iti/android/foodplanner/data/models/selections/categoryFeed/CategoriesFeed.java	(date 1674319572931)
@@ -0,0 +1,27 @@
+package iti.android.foodplanner.data.models.selections.categoryFeed;
+
+import com.google.gson.annotations.SerializedName;
+
+import java.util.List;
+
+public class CategoriesFeed {
+
+	@SerializedName("meals")
+	private List<CategoriesItem> categories;
+
+	public void setCategories(List<CategoriesItem> categories){
+		this.categories = categories;
+	}
+
+	public List<CategoriesItem> getCategories(){
+		return categories;
+	}
+
+	@Override
+ 	public String toString(){
+		return 
+			"Categories{" +
+			"Category = '" + categories + '\'' +
+			"}";
+		}
+}
\ No newline at end of file
Index: app/src/main/java/iti/android/foodplanner/data/models/selections/categoryFeed/CategoriesItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/data/models/selections/categoryFeed/CategoriesItem.java b/app/src/main/java/iti/android/foodplanner/data/models/selections/categoryFeed/CategoriesItem.java
new file mode 100644
--- /dev/null	(date 1674319572926)
+++ b/app/src/main/java/iti/android/foodplanner/data/models/selections/categoryFeed/CategoriesItem.java	(date 1674319572926)
@@ -0,0 +1,59 @@
+package iti.android.foodplanner.data.models.selections.categoryFeed;
+
+import androidx.room.ColumnInfo;
+import androidx.room.Entity;
+import androidx.room.PrimaryKey;
+
+import com.google.gson.annotations.SerializedName;
+
+public class CategoriesItem{
+;
+
+	private String strCategory;
+
+	private String strCategoryDescription;
+
+	private String idCategory;
+
+	private String strCategoryThumb;
+
+	public CategoriesItem(String strCategory, String strCategoryDescription, String idCategory, String strCategoryThumb) {
+		this.strCategory = strCategory;
+		this.strCategoryDescription = strCategoryDescription;
+		this.idCategory = idCategory;
+		this.strCategoryThumb = strCategoryThumb;
+	}
+
+	public void setStrCategory(String strCategory){
+		this.strCategory = strCategory;
+	}
+
+	public String getStrCategory(){
+		return strCategory;
+	}
+
+	public void setStrCategoryDescription(String strCategoryDescription){
+		this.strCategoryDescription = strCategoryDescription;
+	}
+
+	public String getStrCategoryDescription(){
+		return strCategoryDescription;
+	}
+
+	public void setIdCategory(String idCategory){
+		this.idCategory = idCategory;
+	}
+
+	public String getIdCategory(){
+		return idCategory;
+	}
+
+	public void setStrCategoryThumb(String strCategoryThumb){
+		this.strCategoryThumb = strCategoryThumb;
+	}
+
+	public String getStrCategoryThumb(){
+		return strCategoryThumb;
+	}
+
+}
\ No newline at end of file
Index: app/src/main/java/iti/android/foodplanner/data/models/BackupHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/data/models/BackupHolder.java b/app/src/main/java/iti/android/foodplanner/data/models/BackupHolder.java
new file mode 100644
--- /dev/null	(date 1674319572982)
+++ b/app/src/main/java/iti/android/foodplanner/data/models/BackupHolder.java	(date 1674319572982)
@@ -0,0 +1,35 @@
+package iti.android.foodplanner.data.models;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import iti.android.foodplanner.data.models.meal.MealsItem;
+
+public class BackupHolder {
+    private User userInfo;
+    private List<MealsItem> FAV = new ArrayList<>();
+
+    public BackupHolder() {
+    }
+
+    public BackupHolder(User userInfo,List<MealsItem> FAV) {
+        this.userInfo = userInfo;
+        this.FAV = FAV;
+    }
+
+    public User getUserInfo() {
+        return userInfo;
+    }
+
+    public void setUserInfo(User userInfo) {
+        this.userInfo = userInfo;
+    }
+
+    public List<MealsItem> getFAV() {
+        return FAV;
+    }
+
+    public void setFAV(List<MealsItem> FAV) {
+        this.FAV = FAV;
+    }
+}
Index: app/src/main/java/iti/android/foodplanner/data/shared/SharedManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/data/shared/SharedManager.java b/app/src/main/java/iti/android/foodplanner/data/shared/SharedManager.java
--- a/app/src/main/java/iti/android/foodplanner/data/shared/SharedManager.java	
+++ b/app/src/main/java/iti/android/foodplanner/data/shared/SharedManager.java	(date 1674319572881)
@@ -29,12 +29,24 @@
         return instance;
     }
 
+
+
+    public void clearAllData(){
+        SharedPreferences.Editor editor = sharedPreferences.edit();
+        editor.clear();
+        editor.apply();
+    }
+
     public void saveUser(User user){
         SharedPreferences.Editor editor = sharedPreferences.edit();
         editor.putString(USER_INFO,new Gson().toJson(user));
         editor.apply();
     }
 
+    public boolean isUser(){
+        return sharedPreferences.contains(USER_INFO);
+    }
+
     public User getUser(){
         String userStr = sharedPreferences.getString(USER_INFO,null);
         User user = new User();
Index: app/src/main/java/iti/android/foodplanner/data/network/ApiCalls.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/data/network/ApiCalls.java b/app/src/main/java/iti/android/foodplanner/data/network/ApiCalls.java
--- a/app/src/main/java/iti/android/foodplanner/data/network/ApiCalls.java	
+++ b/app/src/main/java/iti/android/foodplanner/data/network/ApiCalls.java	(date 1674319572879)
@@ -1,13 +1,10 @@
 package iti.android.foodplanner.data.network;
 
-import java.util.List;
-
 import io.reactivex.rxjava3.core.Single;
-import iti.android.foodplanner.data.models.area.AreasList;
-import iti.android.foodplanner.data.models.categoryFeed.CategoriesFeed;
-import iti.android.foodplanner.data.models.categoryFeed.CategoriesItem;
-import iti.android.foodplanner.data.models.category.CategoriesList;
-import iti.android.foodplanner.data.models.Ingredient.IngredientsList;
+import iti.android.foodplanner.data.models.selections.area.AreasList;
+import iti.android.foodplanner.data.models.selections.categoryFeed.CategoriesFeed;
+import iti.android.foodplanner.data.models.selections.category.CategoriesList;
+import iti.android.foodplanner.data.models.selections.Ingredient.IngredientsList;
 import iti.android.foodplanner.data.models.meal.MealsList;
 import retrofit2.http.GET;
 import retrofit2.http.Query;
Index: app/src/main/java/iti/android/foodplanner/data/authentication/GoogleAuth.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/data/authentication/GoogleAuth.java b/app/src/main/java/iti/android/foodplanner/data/authentication/GoogleAuth.java
--- a/app/src/main/java/iti/android/foodplanner/data/authentication/GoogleAuth.java	
+++ b/app/src/main/java/iti/android/foodplanner/data/authentication/GoogleAuth.java	(date 1674319572868)
@@ -24,6 +24,7 @@
 
 import iti.android.foodplanner.R;
 import iti.android.foodplanner.data.backup.BackupManager;
+import iti.android.foodplanner.data.models.BackupHolder;
 import iti.android.foodplanner.data.models.User;
 import iti.android.foodplanner.data.shared.SharedManager;
 import iti.android.foodplanner.ui.features.sign_in_with_google.SignInWithGoogleInterface;
@@ -35,13 +36,12 @@
     private FirebaseAuth mAuth;
     private GoogleApiClient googleApiClient;
     private SignInWithGoogleInterface signInWithGoogleInterface;
-    private BackupManager backupManager;
 
     private Context context;
 
+
     public GoogleAuth() {
         mAuth = FirebaseAuth.getInstance();
-        backupManager = BackupManager.getInstance();
     }
 
 
@@ -52,14 +52,17 @@
 
     @Override
     public void login() {
-        if (googleApiClient!=null)
-            context.startActivity(Auth.GoogleSignInApi.getSignInIntent(googleApiClient));
-    }
+      }
+
+
 
     @Override
-    public boolean logout() {
-        return false;
+    public void logout(Context context) {
+        SharedManager.getInstance(context).clearAllData();
+        mAuth.signOut();
     }
+
+
 
     @Override
     public GoogleAuth.Google instance() {
@@ -68,13 +71,14 @@
 
     public class Google {
         public void googleIntializer(Activity activity, @NonNull FragmentActivity fragmentActivity, SignInWithGoogleInterface signInWithGoogleInterface) {
-            GoogleAuth.this.signInWithGoogleInterface = signInWithGoogleInterface;
             GoogleAuth.this.context = activity.getApplicationContext();
+            GoogleAuth.this.signInWithGoogleInterface = signInWithGoogleInterface;
 
             GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                     .requestIdToken(activity.getApplicationContext().getString(R.string.default_web_client_id))
                     .requestEmail()
                     .build();
+
             googleApiClient = new GoogleApiClient.Builder(activity.getApplicationContext()).enableAutoManage(fragmentActivity, GoogleAuth.this).
                     addApi(Auth.GOOGLE_SIGN_IN_API, gso).
                     build();
@@ -94,27 +98,14 @@
             try {
                 GoogleSignInAccount account = completedTask.getResult(ApiException.class);
                 firebaseAuthWithGoogle(account);
-//                User user = getUserData();
-//                SharedManager.getInstance(context).saveUser(user);
-                signInWithGoogleInterface.onSuccessFullSignIn(account);
-//                backupManager.saveUser(user, task -> {
-//                    if (task.isSuccessful()){
-//                        SharedManager.getInstance(context).saveUser(user);
-//                        signInWithGoogleInterface.onSuccessFullSignIn(account);
-//                    }else{
-//                        signInWithGoogleInterface.onFailedSignIn(null);
-//                    }
-//                });
+
             } catch (ApiException e) {
-                Log.w(TAG, "signInResult:failed code=" + e.getStatusCode());
-                signInWithGoogleInterface.onFailedSignIn(null);
+                Log.w(TAG, "SignInResult : Failed code==>" + e.getStatusCode());
+                signInWithGoogleInterface.onFailedFireBaseAuth();
             }
         }
-
-
 
         public FirebaseUser getCurrentUser() {
-            mAuth=FirebaseAuth.getInstance();
             return mAuth.getCurrentUser();
         }
 
@@ -122,7 +113,16 @@
             AuthCredential credential = GoogleAuthProvider.getCredential(acct.getIdToken(), null);
             mAuth.signInWithCredential(credential)
                     .addOnSuccessListener(authResult -> {
-                        signInWithGoogleInterface.onSuccessFullFireBaseAuth();
+                        User user = getUserData();
+                        SharedManager sharedManager = SharedManager.getInstance(context);
+                        BackupManager.getInstance(sharedManager).saveUser(user, task -> {
+                            if (task.isSuccessful()){
+                                sharedManager.saveUser(user);
+                                signInWithGoogleInterface.onSuccessFullFireBaseAuth();
+                            }else{
+                                signInWithGoogleInterface.onFailedFireBaseAuth();
+                            }
+                        });
                     })
                     .addOnFailureListener(e -> signInWithGoogleInterface.onFailedFireBaseAuth());
         }
@@ -134,6 +134,6 @@
 
     private User getUserData() {
         FirebaseUser user = mAuth.getCurrentUser();
-        return new User("5585", "Mohamed", "sdfjsdhl", "meado@mail.com");
+        return new User(user.getUid(), user.getDisplayName(), user.getPhotoUrl().toString(), user.getEmail(),AuthenticationFactory.GOOGLE);
     }
 }
Index: app/src/main/java/iti/android/foodplanner/data/authentication/TwitterAuth.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/data/authentication/TwitterAuth.java b/app/src/main/java/iti/android/foodplanner/data/authentication/TwitterAuth.java
--- a/app/src/main/java/iti/android/foodplanner/data/authentication/TwitterAuth.java	
+++ b/app/src/main/java/iti/android/foodplanner/data/authentication/TwitterAuth.java	(date 1674319572865)
@@ -1,15 +1,14 @@
 package iti.android.foodplanner.data.authentication;
 
+import android.content.Context;
 import android.content.Intent;
 
 import com.google.firebase.auth.FirebaseUser;
 
 public class TwitterAuth extends SocialAuthentication<TwitterAuth> {
     @Override
-    public boolean logout() {
-        return false;
+    public void logout(Context context){
     }
-
     @Override
     public TwitterAuth instance() {
         return this;
Index: app/src/main/java/iti/android/foodplanner/data/authentication/FacebookAuth.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/data/authentication/FacebookAuth.java b/app/src/main/java/iti/android/foodplanner/data/authentication/FacebookAuth.java
--- a/app/src/main/java/iti/android/foodplanner/data/authentication/FacebookAuth.java	
+++ b/app/src/main/java/iti/android/foodplanner/data/authentication/FacebookAuth.java	(date 1674319572862)
@@ -1,15 +1,14 @@
 package iti.android.foodplanner.data.authentication;
 
+import android.content.Context;
 import android.content.Intent;
 
 import com.google.firebase.auth.FirebaseUser;
 
 public class FacebookAuth extends SocialAuthentication<FacebookAuth> {
     @Override
-    public boolean logout() {
-        return false;
+    public void logout(Context context){
     }
-
     @Override
     public FacebookAuth instance() {
         return this;
Index: app/src/main/java/iti/android/foodplanner/data/authentication/Authentication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/data/authentication/Authentication.java b/app/src/main/java/iti/android/foodplanner/data/authentication/Authentication.java
--- a/app/src/main/java/iti/android/foodplanner/data/authentication/Authentication.java	
+++ b/app/src/main/java/iti/android/foodplanner/data/authentication/Authentication.java	(date 1674319572860)
@@ -15,7 +15,7 @@
 public abstract class Authentication<T> {
     public void login(LoginInterface loginInterface, String email, String password){}
     public void register(RegisterInterface registerInterface, String email, String password){}
-    public abstract boolean logout();
+    public abstract void logout(Context context);
     public abstract T instance();
 
 }
Index: app/src/main/java/iti/android/foodplanner/data/authentication/EmailAndPasswordAuth.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/data/authentication/EmailAndPasswordAuth.java b/app/src/main/java/iti/android/foodplanner/data/authentication/EmailAndPasswordAuth.java
--- a/app/src/main/java/iti/android/foodplanner/data/authentication/EmailAndPasswordAuth.java	
+++ b/app/src/main/java/iti/android/foodplanner/data/authentication/EmailAndPasswordAuth.java	(date 1674319572855)
@@ -1,5 +1,6 @@
 package iti.android.foodplanner.data.authentication;
 
+import android.content.Context;
 import android.util.Log;
 
 import androidx.annotation.NonNull;
@@ -20,8 +21,7 @@
     private RegisterInterface registerInterface;
 
     @Override
-    public boolean logout() {
-        return false;
+    public void logout(Context context){
     }
 
     @Override
Index: app/src/main/java/iti/android/foodplanner/data/Repository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/data/Repository.java b/app/src/main/java/iti/android/foodplanner/data/Repository.java
--- a/app/src/main/java/iti/android/foodplanner/data/Repository.java	
+++ b/app/src/main/java/iti/android/foodplanner/data/Repository.java	(date 1674319572851)
@@ -7,18 +7,17 @@
 import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
 import io.reactivex.rxjava3.annotations.NonNull;
 import io.reactivex.rxjava3.core.CompletableObserver;
-import io.reactivex.rxjava3.core.Single;
 import io.reactivex.rxjava3.core.SingleObserver;
 import io.reactivex.rxjava3.disposables.Disposable;
 import io.reactivex.rxjava3.schedulers.Schedulers;
-import iti.android.foodplanner.data.authentication.Authentication;
-import iti.android.foodplanner.data.authentication.AuthenticationFactory;
-import iti.android.foodplanner.data.models.area.Area;
-import iti.android.foodplanner.data.models.area.AreasList;
-import iti.android.foodplanner.data.models.categoryFeed.CategoriesFeed;
-import iti.android.foodplanner.data.models.categoryFeed.CategoriesItem;
-import iti.android.foodplanner.data.models.category.CategoriesList;
-import iti.android.foodplanner.data.models.Ingredient.IngredientsList;
+import iti.android.foodplanner.data.backup.BackupManager;
+import iti.android.foodplanner.data.models.User;
+import iti.android.foodplanner.data.models.selections.area.Area;
+import iti.android.foodplanner.data.models.selections.area.AreasList;
+import iti.android.foodplanner.data.models.selections.categoryFeed.CategoriesFeed;
+import iti.android.foodplanner.data.models.selections.categoryFeed.CategoriesItem;
+import iti.android.foodplanner.data.models.selections.category.CategoriesList;
+import iti.android.foodplanner.data.models.selections.Ingredient.IngredientsList;
 import iti.android.foodplanner.data.models.meal.MealPlan;
 import iti.android.foodplanner.data.models.meal.MealsItem;
 import iti.android.foodplanner.data.models.meal.MealsList;
@@ -31,18 +30,49 @@
  * Gather all functions from Network, Room Database And Shared Manager
  */
 public class Repository {
-    private ApiCalls apiCalls;
-    private RoomDatabase roomDatabase;
-    private SharedManager sharedManager;
+    private final ApiCalls apiCalls;
+    private final RoomDatabase roomDatabase;
+    private final BackupManager backupManager;
+    private final SharedManager sharedManager;
+    public static Repository repository = null;
+    public static Repository getInstance(Context context){
+        if (repository==null)
+            repository = new Repository(context);
+        return repository;
+    }
 
-    public Repository(Context context) {
+    private Repository(Context context) {
             apiCalls = Network.apiCalls;
             roomDatabase = RoomDatabase.getInstance(context);
             sharedManager = SharedManager.getInstance(context);
+            backupManager = BackupManager.getInstance(sharedManager);
+    }
+
+    // region Shared
+    public boolean isUser(){
+        return sharedManager.isUser();
+    }
+
+    public void saveUser(User user){
+        sharedManager.saveUser(user);
     }
 
+    public User getUser(){
+        return sharedManager.getUser();
+    }
+    public boolean isFirstEntrance(){
+        return sharedManager.isFirstEntrance();
+    }
+
+
+    public void saveEntrance(){
+        sharedManager.saveEntrance();
+    }
+
+
+    // endregion Shared
     // region ROOM
-    public void insertFavoriteMealDataBase(MealsItem mealsItem,DataFetch<Void> dataFetch){
+    private void insertFavoriteToRoom(MealsItem mealsItem,DataFetch<Void> dataFetch){
         roomDatabase
                 .FavoriteDAO()
                 .insertFavoriteMeal(mealsItem)
@@ -56,15 +86,38 @@
 
                     @Override
                     public void onComplete() {
+                        backupManager.saveFavorite(mealsItem);
                         dataFetch.onDataSuccessResponse(null);
                     }
 
                     @Override
                     public void onError(@NonNull Throwable e) {
-                            dataFetch.onDataFailedResponse(e.getMessage());
+                        dataFetch.onDataFailedResponse(e.getMessage());
                     }
                 });
     }
+    public void insertFavoriteMealDataBase(MealsItem mealsItem,DataFetch<Void> dataFetch){
+        apiCalls.retrieveMealByID(mealsItem.getIdMeal())
+                .subscribeOn(Schedulers.io())
+                .observeOn(AndroidSchedulers.mainThread())
+                .subscribe(new SingleObserver<MealsList>() {
+                    @Override
+                    public void onSubscribe(@NonNull Disposable d) {
+
+                    }
+
+                    @Override
+                    public void onSuccess(@NonNull MealsList mealsList) {
+                        insertFavoriteToRoom(mealsList.getMeals().get(0),dataFetch);
+                    }
+
+                    @Override
+                    public void onError(@NonNull Throwable e) {
+
+                    }
+                });
+
+    }
 
     public void showFavouriteMealsDataBase(DataFetch<List<MealsItem>> dataFetch){
         roomDatabase
@@ -90,6 +143,7 @@
                 });
     }
     public void deleteFavorite(MealsItem mealsItem,DataFetch<Void> dataFetch){
+        backupManager.deleteFavorite(mealsItem);
         roomDatabase.FavoriteDAO()
                 .deleteFavouriteMeal(mealsItem)
                 .subscribeOn(Schedulers.io())
@@ -180,8 +234,7 @@
                 });
     }
     // endregion ROOM
-
-    // region APIs
+    // region API
 
     /**
      * link: <a href="https://www.themealdb.com/api/json/v1/1/random.php">Single Random Meal</a>
Index: app/src/main/java/iti/android/foodplanner/data/TestActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/data/TestActivity.java b/app/src/main/java/iti/android/foodplanner/data/TestActivity.java
--- a/app/src/main/java/iti/android/foodplanner/data/TestActivity.java	
+++ b/app/src/main/java/iti/android/foodplanner/data/TestActivity.java	(date 1674319572848)
@@ -9,29 +9,16 @@
 
 import com.google.android.gms.tasks.OnCanceledListener;
 import com.google.android.gms.tasks.OnCompleteListener;
-import com.google.android.gms.tasks.OnFailureListener;
-import com.google.android.gms.tasks.OnSuccessListener;
 import com.google.android.gms.tasks.Task;
-import com.google.firebase.firestore.DocumentReference;
 import com.google.firebase.firestore.FirebaseFirestore;
 import com.google.firebase.firestore.QuerySnapshot;
 
 import java.util.HashMap;
-import java.util.List;
 import java.util.Map;
 
-import io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;
-import io.reactivex.rxjava3.core.Observable;
-import io.reactivex.rxjava3.core.Observer;
-import io.reactivex.rxjava3.core.Scheduler;
-import io.reactivex.rxjava3.disposables.Disposable;
-import io.reactivex.rxjava3.schedulers.Schedulers;
 import iti.android.foodplanner.R;
-import iti.android.foodplanner.data.models.User;
-import iti.android.foodplanner.data.models.area.AreasList;
 import iti.android.foodplanner.data.models.meal.MealPlan;
 import iti.android.foodplanner.data.models.meal.MealsItem;
-import iti.android.foodplanner.data.room.Week;
 
 public class TestActivity extends AppCompatActivity {
 
Index: app/src/main/java/iti/android/foodplanner/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/iti/android/foodplanner/MainActivity.java b/app/src/main/java/iti/android/foodplanner/MainActivity.java
--- a/app/src/main/java/iti/android/foodplanner/MainActivity.java	
+++ b/app/src/main/java/iti/android/foodplanner/MainActivity.java	(date 1674319572844)
@@ -1,16 +1,25 @@
 package iti.android.foodplanner;
 
+import android.content.Intent;
 import android.os.Bundle;
+import android.view.Menu;
+import android.view.MenuItem;
 import android.widget.Toast;
 
 import com.google.android.gms.tasks.OnCanceledListener;
+import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.OnFailureListener;
+import com.google.android.gms.tasks.Task;
 import com.google.android.material.bottomnavigation.BottomNavigationView;
 import com.google.firebase.database.DatabaseReference;
 import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.firestore.DocumentSnapshot;
+import com.google.firebase.firestore.EventListener;
 import com.google.firebase.firestore.FirebaseFirestore;
+import com.google.firebase.firestore.FirebaseFirestoreException;
 
 import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
 import androidx.navigation.NavController;
 import androidx.navigation.Navigation;
@@ -21,7 +30,14 @@
 import java.util.Map;
 
 import iti.android.foodplanner.data.TestActivity;
+import iti.android.foodplanner.data.authentication.Authentication;
+import iti.android.foodplanner.data.authentication.AuthenticationFactory;
+import iti.android.foodplanner.data.backup.BackupManager;
+import iti.android.foodplanner.data.models.BackupHolder;
+import iti.android.foodplanner.data.shared.SharedManager;
 import iti.android.foodplanner.databinding.ActivityMainAppBinding;
+import iti.android.foodplanner.ui.features.login.LoginActivity;
+import iti.android.foodplanner.ui.features.sign_in_with_google.SignUpOrLoginActivity;
 
 public class MainActivity extends AppCompatActivity {
 
@@ -35,50 +51,20 @@
         binding = ActivityMainAppBinding.inflate(getLayoutInflater());
         setContentView(binding.getRoot());
 
-        FirebaseFirestore db = FirebaseFirestore.getInstance();
-//        User user = new User("das","asda","asdas","asd");
-//        db.collection("users")
-//                .add(user)
-//                .addOnSuccessListener(new OnSuccessListener<DocumentReference>() {
-//                    @Override
-//                    public void onSuccess(DocumentReference documentReference) {
-//                        Log.d(TAG, "DocumentSnapshot added with ID: " + documentReference.getId());
-//                    }
-//                })
-//                .addOnFailureListener(new OnFailureListener() {
-//                    @Override
-//                    public void onFailure(@NonNull Exception e) {
-//                        Log.w(TAG, "Error adding document", e);
-//                    }
-//                });
-
-//        Map<String, Object> user = new HashMap<>();
-//        user.put("first", "Alan");
-//        user.put("middle", "Mathison");
-//        user.put("last", "Turing");
-//        user.put("born", 1912);
+        navigationUiSettings();
 
-//                        .document()
-        FirebaseDatabase database = FirebaseDatabase.getInstance();
-        DatabaseReference myRef = database.getReference("message");
+        BackupManager.getInstance(SharedManager.getInstance(this)).restoreData( new EventListener<DocumentSnapshot>() {
+            @Override
+            public void onEvent(@Nullable DocumentSnapshot value, @Nullable FirebaseFirestoreException error) {
+                if (value.exists()){
+                    BackupHolder backupHolder = value.toObject(BackupHolder.class);
+                    Toast.makeText(MainActivity.this, "Hello OOO+: "+backupHolder.getFAV().size(), Toast.LENGTH_SHORT).show();
+                }
+            }
+        });
+    }
 
-        myRef.setValue("Hello, World!");
-//        db
-//                .collection("users")
-//                .add(user)
-//                .addOnCompleteListener(task -> Toast.makeText(MainActivity.this, "Gooooolge", Toast.LENGTH_SHORT).show())
-//                .addOnFailureListener(new OnFailureListener() {
-//                    @Override
-//                    public void onFailure(@NonNull Exception e) {
-//                        Toast.makeText(MainActivity.this, "Errrorrrr", Toast.LENGTH_SHORT).show();
-//                    }
-//                }).addOnCanceledListener(new OnCanceledListener() {
-//                    @Override
-//                    public void onCanceled() {
-//                        Toast.makeText(MainActivity.this, "Cancel", Toast.LENGTH_SHORT).show();
-//                    }
-//                });
-
+    private void navigationUiSettings() {
         BottomNavigationView navView = findViewById(R.id.nav_view);
         AppBarConfiguration appBarConfiguration = new AppBarConfiguration.Builder(
                 R.id.navigation_home, R.id.navigation_favorite, R.id.navigation_plan)
@@ -89,5 +75,30 @@
     }
 
 
+    @Override
+    public boolean onCreateOptionsMenu(Menu menu) {
+        getMenuInflater().inflate(R.menu.option_menu,menu);
+        return super.onCreateOptionsMenu(menu);
+    }
+
+    @Override
+    public boolean onOptionsItemSelected(@NonNull MenuItem item) {
+        switch (item.getItemId()){
+            case R.id.settings_option:
+                break;
+            case R.id.signout_option:
+                logoutFromApp();
+                break;
 
+        }
+        return super.onOptionsItemSelected(item);
+    }
+
+    private void logoutFromApp() {
+        int autProvider = SharedManager.getInstance(this).getUser().getAuthProvider();
+        AuthenticationFactory.authenticationManager(autProvider)
+                .logout(this);
+        startActivity(new Intent(this, SignUpOrLoginActivity.class));
+        finish();
+    }
 }
\ No newline at end of file
diff --git a/app/src/main/java/iti/android/foodplanner/data/models/meal/PlanRelation.java b/app/src/main/java/iti/android/foodplanner/data/models/meal/PlanRelation.java
deleted file mode 100644
diff --git a/app/src/main/java/iti/android/foodplanner/data/models/area/Area.java b/app/src/main/java/iti/android/foodplanner/data/models/area/Area.java
deleted file mode 100644
diff --git a/app/src/main/java/iti/android/foodplanner/data/models/area/AreasList.java b/app/src/main/java/iti/android/foodplanner/data/models/area/AreasList.java
deleted file mode 100644
diff --git a/app/src/main/java/iti/android/foodplanner/data/models/category/Category.java b/app/src/main/java/iti/android/foodplanner/data/models/category/Category.java
deleted file mode 100644
diff --git a/app/src/main/java/iti/android/foodplanner/data/models/category/CategoriesList.java b/app/src/main/java/iti/android/foodplanner/data/models/category/CategoriesList.java
deleted file mode 100644
diff --git a/app/src/main/java/iti/android/foodplanner/data/models/Ingredient/Ingredient.java b/app/src/main/java/iti/android/foodplanner/data/models/Ingredient/Ingredient.java
deleted file mode 100644
diff --git a/app/src/main/java/iti/android/foodplanner/data/models/Ingredient/IngredientsList.java b/app/src/main/java/iti/android/foodplanner/data/models/Ingredient/IngredientsList.java
deleted file mode 100644
diff --git a/app/src/main/java/iti/android/foodplanner/data/models/categoryFeed/CategoriesFeed.java b/app/src/main/java/iti/android/foodplanner/data/models/categoryFeed/CategoriesFeed.java
deleted file mode 100644
diff --git a/app/src/main/java/iti/android/foodplanner/data/models/categoryFeed/CategoriesItem.java b/app/src/main/java/iti/android/foodplanner/data/models/categoryFeed/CategoriesItem.java
deleted file mode 100644
